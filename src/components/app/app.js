import React, {Component} from 'react';import AppHeader from "../app-header/";import SearchPanel from "../search-panel/";import TodoList from "../todo-list/";import './app.css'import ItemStatusFilter from "../item-status-filter/";import AddItem from '../add-item';export default class App extends Component {    maxId = 100;    state = {        todoData: [            this.createTodoItem('Drink Coffee'),            this.createTodoItem('Learn React'),            this.createTodoItem('Make React App'),        ],        term: ''    };    createTodoItem(label) {        return {            label,            important: false,            done: false,            id: this.maxId++        }    }    deleteItem = (id) => {        this.setState(({todoData}) => {            // находим индекс элемента            const idx = todoData.findIndex((el) => el.id === id)            const newArr = [                ...todoData.slice(0, idx),                ...todoData.slice(idx + 1)            ];            return {                todoData: newArr            };        });    };    addItem = (text) => {        // создаём новый объект        const newItem = this.createTodoItem(text)        this.setState(({todoData}) => {            // новый массив, куда помещаем весь todoData и новый объект            const newArr = [                ...todoData,                newItem            ]            return {                todoData: newArr            }        })    }    toggleProperty(arr, id, propName) {        const idx = arr.findIndex((el) => el.id === id)        const oldItem = arr[idx];        const newItem = {...oldItem, [propName]: !oldItem[propName]};        return [            ...arr.slice(0, idx),            newItem,            ...arr.slice(idx + 1)        ]    }    onToggleImportant = (id) => {        this.setState(({todoData}) => {            return {                todoData: this.toggleProperty(todoData, id, 'important')            }        })    }    onSearchChange = (term) => {        this.setState({term})    }    onToggleDone = (id) => {        this.setState(({ todoData }) => {            return {                todoData: this.toggleProperty(todoData, id, 'done')            };        });    };    search(items, term) {        if(term.length === 0) {            return items;        }        return items.filter((item) => {            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;        })    }    render() {        const doneCount = this.state.todoData.filter((el) => el.done).length;        const todoCount = this.state.todoData.length - doneCount;        const visibleItems = this.search(this.state.todoData, this.state.term)        return(            <div className="todo-app">                <AppHeader toDo={todoCount} done={doneCount} />                <div className="top-panel d-flex">                    <SearchPanel                    onSearchChange={this.onSearchChange}/>                    <ItemStatusFilter />                </div>                <TodoList                    todoData={visibleItems}                    onDeleted={this.deleteItem}                    onToggleImportant={this.onToggleImportant}                    onToggleDone={this.onToggleDone}                />                <AddItem addItem={this.addItem}                todo={this.state.todoData}/>            </div>        )    }}